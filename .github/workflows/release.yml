name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  smart-release:
    name: Release via cargo-smart-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: true

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-smart-release
        # cache cargo registry, git index and installed binaries to speed up repeated runs
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-smart-release
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Ensure cargo-smart-release
        run: |
          if [ -x "$HOME/.cargo/bin/cargo-smart-release" ]; then
            echo "cargo-smart-release found in cache, skipping install"
            $HOME/.cargo/bin/cargo-smart-release --version || true
          else
            cargo install cargo-smart-release
          fi

      - name: Ensure non-detached HEAD
        # create a safe branch if we're on a detached HEAD so tools that need git history work
        run: |
          if [ -z "$(git symbolic-ref --quiet HEAD 2>/dev/null)" ]; then
            echo "Detected detached HEAD. Creating temporary branch 'release-ci'"
            git branch -f release-ci
            git checkout release-ci
          else
            echo "On branch $(git rev-parse --abbrev-ref HEAD)"
          fi

      - name: Ensure git author/committer identity
        # cargo-smart-release expects a parseable GIT_AUTHOR_IDENT; set a safe default
        run: |
          git config user.name "Martin Leitner-Ankerl"
          git config user.email "martin.ankerl@gmail.com"
          # Provide simple ident strings so tools that parse GIT_AUTHOR_IDENT work
          if [ -z "${GIT_AUTHOR_IDENT:-}" ]; then
            echo "GIT_AUTHOR_IDENT=Martin Leitner-Ankerl <martin.ankerl@gmail.com>" >> $GITHUB_ENV
          fi
          if [ -z "${GIT_COMMITTER_IDENT:-}" ]; then
            echo "GIT_COMMITTER_IDENT=Martin Leitner-Ankerl <martin.ankerl@gmail.com>" >> $GITHUB_ENV
          fi

      - name: Run cargo-smart-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

        # cargo-smart-release will create the GitHub Release, build artifacts and publish to crates.io
        run: cargo smart-release --update-crates-index --execute
